version: '3.8'

volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:
  caddy_data:
  caddy_config:
  openwebui_data:

networks:
  jaguar:

services:
  caddy:
    image: caddy:2-alpine
    container_name: jaguar-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - jaguar

  postgres:
    image: postgres:16-alpine
    container_name: jaguar-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    networks:
      - jaguar
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  qdrant:
    image: qdrant/qdrant:latest
    container_name: jaguar-qdrant
    restart: unless-stopped
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - jaguar
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334

  n8n:
    image: n8nio/n8n:latest
    container_name: jaguar-n8n
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - N8N_HOST=n8n.thespatialnetwork.net
      - N8N_PROTOCOL=https
      - N8N_PORT=443
      - WEBHOOK_URL=https://n8n.thespatialnetwork.net
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./workflows:/opt/n8n/workflows
    networks:
      - jaguar
    depends_on:
      postgres:
        condition: service_healthy

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: jaguar-openwebui
    restart: unless-stopped
    environment:
      - WEBUI_NAME=Jaguar AGI
      - WEBUI_URL=https://ai.thespatialnetwork.net
      - ENABLE_SIGNUP=false
      - DEFAULT_USER_ROLE=user
      - ENABLE_COMMUNITY_SHARING=false
      - ENABLE_MESSAGE_RATING=true
      - ENABLE_MODEL_FILTER=true
    volumes:
      - openwebui_data:/app/backend/data
      - ./openwebui_n8n_pipe.py:/app/backend/data/functions/n8n_pipe.py
    networks:
      - jaguar

  # Optional: Ollama for local LLM inference
  ollama:
    image: ollama/ollama:latest
    container_name: jaguar-ollama
    restart: unless-stopped
    volumes:
      - ./ollama_data:/root/.ollama
    networks:
      - jaguar
    environment:
      - OLLAMA_HOST=0.0.0.0
    profiles:
      - ollama

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: jaguar-redis
    restart: unless-stopped
    volumes:
      - ./redis_data:/data
    networks:
      - jaguar
    command: redis-server --appendonly yes
    profiles:
      - cache
