# Jaguar AGI Production Caddyfile
# Handles SSL termination and reverse proxy for n8n and OpenWebUI

n8n.thespatialnetwork.net {
    # Reverse proxy to n8n container
    reverse_proxy jaguar-n8n:5678
    
    # Security headers
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
    }
    
    # Enable compression
    encode gzip
    
    # Rate limiting
    rate_limit {
        zone n8n_zone {
            key {remote_host}
            events 100
            window 1m
        }
    }
    
    # Logging
    log {
        output file /var/log/caddy/n8n.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
    
    # Handle webhook endpoints with higher limits
    @webhooks path /webhook/*
    handle @webhooks {
        request_body {
            max_size 10MB
        }
        reverse_proxy jaguar-n8n:5678
    }
    
    # Handle API endpoints
    @api path /api/*
    handle @api {
        reverse_proxy jaguar-n8n:5678
    }
    
    # Handle static assets with caching
    @static path /static/* /assets/* /favicon.ico
    handle @static {
        header Cache-Control "public, max-age=31536000"
        reverse_proxy jaguar-n8n:5678
    }
}

ai.thespatialnetwork.net {
    # Reverse proxy to OpenWebUI container
    reverse_proxy jaguar-openwebui:8080
    
    # Security headers
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
    }
    
    # Enable compression
    encode gzip
    
    # Rate limiting for API endpoints
    rate_limit {
        zone openwebui_api {
            key {remote_host}
            events 60
            window 1m
        }
    }
    
    # Logging
    log {
        output file /var/log/caddy/openwebui.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
    
    # Handle API endpoints with rate limiting
    @api path /api/*
    handle @api {
        request_body {
            max_size 50MB
        }
        reverse_proxy jaguar-openwebui:8080 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Handle WebSocket connections for real-time chat
    @websocket {
        header Connection *Upgrade*
        header Upgrade websocket
    }
    handle @websocket {
        reverse_proxy jaguar-openwebui:8080
    }
    
    # Handle static assets with caching
    @static path /static/* /assets/* /favicon.ico *.css *.js *.png *.jpg *.svg
    handle @static {
        header Cache-Control "public, max-age=86400"
        reverse_proxy jaguar-openwebui:8080
    }
    
    # Handle file uploads
    @uploads path /api/v1/files/*
    handle @uploads {
        request_body {
            max_size 100MB
        }
        reverse_proxy jaguar-openwebui:8080
    }
}

# Optional: Redirect www to non-www
www.n8n.thespatialnetwork.net {
    redir https://n8n.thespatialnetwork.net{uri} permanent
}

www.ai.thespatialnetwork.net {
    redir https://ai.thespatialnetwork.net{uri} permanent
}

# Optional: Health check endpoint
health.thespatialnetwork.net {
    respond /health "OK" 200
    respond /n8n-health {
        reverse_proxy jaguar-n8n:5678/healthz
    }
    respond /openwebui-health {
        reverse_proxy jaguar-openwebui:8080/health
    }
}

# Global options
{
    # Email for Let's Encrypt
    email admin@thespatialnetwork.net
    
    # Use Let's Encrypt production server
    acme_ca https://acme-v02.api.letsencrypt.org/directory
    
    # Enable HTTP/3
    servers {
        protocols h1 h2 h3
    }
    
    # Security settings
    auto_https on
    
    # Log level
    log {
        level INFO
    }
}
